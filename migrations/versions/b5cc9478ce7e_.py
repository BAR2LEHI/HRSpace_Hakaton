"""empty message

Revision ID: b5cc9478ce7e
Revises: 
Create Date: 2024-03-26 00:38:24.512626

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b5cc9478ce7e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('application',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('approved', 'moderation', 'draft', 'close', name='statusenum', create_type=False), nullable=True),
    sa.Column('company_specialization', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('experience', postgresql.ENUM('without_exp', 'up_to_one_year', 'from_one_year', 'from_2_years', 'from_3_years', name='experienceenum', create_type=False), nullable=False),
    sa.Column('salary_from', sa.Integer(), nullable=True),
    sa.Column('salary_up_to', sa.Integer(), nullable=True),
    sa.Column('paperwork', postgresql.ENUM('gph', 'fixed_term', 'full_registration', name='paperworkenum', create_type=False), nullable=True),
    sa.Column('responsibilities_requirements', sa.String(), nullable=True),
    sa.Column('payment', sa.Integer(), nullable=False),
    sa.Column('workers_number', sa.Integer(), nullable=False),
    sa.Column('terms_payment', postgresql.ENUM('all_now', 'fifty_fifty', 'all_after', name='termspaymentenum', create_type=False), nullable=False),
    sa.Column('recruiters_number', sa.Integer(), nullable=True),
    sa.Column('resume_showing_date', sa.DateTime(), nullable=True),
    sa.Column('desired_release_date', sa.DateTime(), nullable=True),
    sa.Column('recruiter_responsibilities', sa.String(), nullable=True),
    sa.Column('resume_type', postgresql.ENUM('no_interview', 'with_interview', name='typesresumeenum', create_type=False), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('stop_list_employee', sa.String(), nullable=True),
    sa.CheckConstraint('payment > 0', name='Мин. оплата труда рекрутера'),
    sa.CheckConstraint('recruiters_number >= 1 AND recruiters_number <= 3', name='Лимит нанимаемых рекрутеров'),
    sa.CheckConstraint('salary_from <= salary_up_to', name='Максимальная планка зп не может быть меньше минимальной'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('condition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', postgresql.ENUM('fitness', 'education', 'dms', name='conditionsenum', create_type=False), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('employment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', postgresql.ENUM('full_time', 'part_time', 'project_activities', name='employmentenum', create_type=False), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', postgresql.ENUM('recruiter', 'customer', 'admin', name='rolesenum', create_type=False), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('work_format',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', postgresql.ENUM('office', 'hybrid', 'remotely_rf', 'remotely_world', name='formatenum', create_type=False), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('condition_to_application',
    sa.Column('condition_id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['condition_id'], ['condition.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('condition_id', 'application_id')
    )
    op.create_table('employment_to_application',
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('employment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['employment_id'], ['employment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('application_id', 'employment_id')
    )
    op.create_table('format_to_application',
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('format_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.ForeignKeyConstraint(['format_id'], ['work_format.id'], ),
    sa.PrimaryKeyConstraint('application_id', 'format_id')
    )
    op.create_table('skill_to_application',
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('application_id', 'skill_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('skill_to_application')
    op.drop_table('format_to_application')
    op.drop_table('employment_to_application')
    op.drop_table('condition_to_application')
    op.drop_table('work_format')
    op.drop_table('user')
    op.drop_table('skill')
    op.drop_table('employment')
    op.drop_table('condition')
    op.drop_table('application')
    # ### end Alembic commands ###
