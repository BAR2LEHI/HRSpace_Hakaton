"""empty message

Revision ID: 1d5f12840f1d
Revises: b5cc9478ce7e
Create Date: 2024-03-26 00:43:19.956711

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1d5f12840f1d'
down_revision: Union[str, None] = 'b5cc9478ce7e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'application', ['id'])
    op.create_unique_constraint(None, 'condition', ['id'])
    op.create_unique_constraint(None, 'employment', ['id'])
    op.drop_constraint('format_to_application_application_id_fkey', 'format_to_application', type_='foreignkey')
    op.drop_constraint('format_to_application_format_id_fkey', 'format_to_application', type_='foreignkey')
    op.create_foreign_key(None, 'format_to_application', 'application', ['application_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'format_to_application', 'work_format', ['format_id'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint(None, 'skill', ['id'])
    op.create_unique_constraint(None, 'user', ['id'])
    op.create_unique_constraint(None, 'work_format', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'work_format', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'skill', type_='unique')
    op.drop_constraint(None, 'format_to_application', type_='foreignkey')
    op.drop_constraint(None, 'format_to_application', type_='foreignkey')
    op.create_foreign_key('format_to_application_format_id_fkey', 'format_to_application', 'work_format', ['format_id'], ['id'])
    op.create_foreign_key('format_to_application_application_id_fkey', 'format_to_application', 'application', ['application_id'], ['id'])
    op.drop_constraint(None, 'employment', type_='unique')
    op.drop_constraint(None, 'condition', type_='unique')
    op.drop_constraint(None, 'application', type_='unique')
    # ### end Alembic commands ###
